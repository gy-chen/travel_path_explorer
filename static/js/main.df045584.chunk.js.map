{"version":3,"sources":["action/route.js","reducer/route.js","action/currentGeolocation.js","reducer/currentGeolocation.js","reducer/index.js","service/baseApi.js","service/explore.js","service/geolocation.js","epic/route.js","epic/geolocation.js","epic/index.js","store/index.js","i18n/index.js","i18n/en.js","i18n/zh.js","component/RedirectToCurrentLocale.js","component/mixin.js","component/PrintButton.js","component/Navbar.js","container/Navbar.js","component/GoogleMapKeyContext.js","component/GoogleMap.js","component/GoogleMapPlacePicker.js","component/PlacePickerCard.js","component/Error.js","component/DirectionSelectWizard.js","component/GoogleStaticMapKeyContext.js","component/GoogleStaticMap.js","component/Image.js","component/Step.js","component/Parking.js","component/Report.js","component/Explore.js","container/Explore.js","component/Intro.js","AppRoutes.js","component/MatomoTracker.js","App.js","registerServiceWorker.js","index.js"],"names":["ROUTE_FETCH","ROUTE_REQUEST","ROUTE_RECEIVE","ERROR_RECEIVE","fetchRoute","origin","destination","type","requestRoute","receiveRoute","route","receiveError","error","combineReducers","currentError","state","arguments","length","undefined","action","currentRoute","isFetching","FETCH_GEOLOCATION","SET_CURRENT_GEOLOCATION","setCurrentGeolocation","geolocation","fetchCurrentGeolocation","currentGeolocationReducer","lat","lng","routeReducer","currentGeolocation","api","create","baseURL","process","findRoute","formatLocation","get","STATUS_CODE","OK","UNAVAILABLE","NOT_FOUND","location","concat","getGeolocation","combineEpics","action$","pipe","ofType","switchMap","Observable","observer","next","exploreApi","then","res","ok","data","status","complete","$action","geolocationApi","routeEpic","geolocationEpic","store","enhancer","epicMiddleware","createEpicMiddleware","finalStoreEnhancer","compose","applyMiddleware","createStore","rootReducer","run","rootEpic","configureStore","generateBundles","MESSAGES_ALL","en","zh","LOCALES","negotiateLanguages","userLocales","negotiateLanguagesFlt","defaultLocale","currentLocales","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","locale","bundle","regenerator_default","a","wrap","_context","prev","Symbol","iterator","done","value","FluentBundle","addMessages","t0","return","finish","stop","_marked","this","AppLocalizationProvider","_Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bundles","_generateBundles","inherits","createClass","key","prevProps","setState","children","react_default","createElement","fluent_react_compat","Component","RedirectToCurrentLocale","currentLocale","navigator","languages","Redirect","to","Button","styled","button","_templateObject","PrintButton","withLocalization","attrs","onClick","window","print","PrintButton_templateObject","show","getString","defaultProps","propTypes","PropTypes","bool","Wrapper","div","Navbar_templateObject","Brand","h5","_templateObject2","Nav","ol","_templateObject3","NavItem","li","_templateObject4","NavLink","_templateObject5","Navbar","_renderPrintButton","bind","assertThisInitialized","displayPrintButton","component_PrintButton","href","Github","size","connect","GoogleMapKeyContext","React","createContext","GoogleMap_templateObject","Content","GoogleMap_templateObject2","SearchBox","input","GoogleMap_templateObject3","enableSearchBox","GoogleMap","_searchBoxRef","createRef","_mapRef","searchBox","map","google","_initSearchBox","_onSearchBoxPlacesChanged","_this2","_this$props","apiKey","options","onLoaded","objectWithoutProperties","initMap","maps","Map","current","_","invoke","load","esm_extends","prevOptions","isEqual","setOptions","places","addListener","controls","ControlPosition","TOP_LEFT","push","getPlaces","GoogleMap_Wrapper","innerRef","GoogleMapWithContext","forwardRef","ref","component_GoogleMapKeyContext","Consumer","key_","assign","GoogleMapPlacePicker","_gmap","_pickedPlaces","_mapLoaded","onMapLoaded","each","marker","setMap","event","Marker","position","latLng","_removeMarkers","mapOptions","component_GoogleMap","Card","PlacePickerCard_templateObject","Title","h3","PlacePickerCard_templateObject2","Description","p","PlacePickerCard_templateObject3","PlacePickerCard","title","description","onPickPlace","component_GoogleMapPlacePicker","ERROR_MESSAGE","_ERROR_MESSAGE","defineProperty","ErrorMessage","Error_templateObject","Error","errorCode","DirectionSelectWizard_templateObject","StepAdditionalContentWrapper","DirectionSelectWizard_templateObject2","NextButton","DirectionSelectWizard_templateObject3","DoneButton","DirectionSelectWizard_templateObject4","ErrorWrapper","DirectionSelectWizard_templateObject5","Loading","_templateObject6","DirectionSelectWizard","_renderStepButton","_renderSelectOriginStep","_renderSelectOriginStepButton","_onPickOrigin","_renderSelectDestinationStep","_renderSelectDestinationStepButton","_onPickDestination","_onDoneSelection","_renderError","selectedOrigin","selectedDestination","_ref","component_PlacePickerCard","render","id","isUserSelectedOrigin","disabled","_this3","_this$props2","isUserSelectedDestination","callbackArgs","_ref2","apply","toConsumableArray","component_Error","DirectionSelectWizard_Wrapper","lib","GoogleStaticMapKeyContext","Image","img","GoogleStaticMap_templateObject","GoogleStaticMap","zoom","center","path","markers","params","markersQueryString","chain","join","toMarkersQueryString","src","qs","stringify","withGoogleStaticMapKey","component_GoogleStaticMapKeyContext","Image_templateObject","Step_templateObject","Column","Step_templateObject2","Instruction","Step_templateObject3","Distance","Step_templateObject4","Step","html_instructions","distance","image","overview_polyline","Step_Wrapper","dangerouslySetInnerHTML","__html","component_GoogleStaticMap","component_Image","Parking_templateObject","Parking_templateObject2","Parking","Parking_Wrapper","Parking_Column","Report_templateObject","ContentWrapper","Report_templateObject2","h2","Report_templateObject3","Report","overview","steps","parkings","Report_Wrapper","Report_Title","polyline","points","step","index","component_Step","parking","component_Parking","Explore_templateObject","Explore","_renderCurrentRoute","_renderDirectionSelectWizard","component_Report","onDirectionSelected","onSearchBoxPlacesChanged","component_DirectionSelectWizard","Explore_Wrapper","dispatch","place","newGeolocation","geometry","Intro_templateObject","Intro_templateObject2","withRouter","match","Intro_Wrapper","Intro_Content","Link","url","AppRoutes","_renderAppRoutes","_hasPreferLocales","hasPreferLocales","matchedLocales","isEmpty","intersection","routes","URLS","_ref3","slicedToArray","name","Route","exact","component","err","component_RedirectToCurrentLocale","i18n_AppLocalizationProvider","container_Navbar","Switch","Intro","MatomoTracker","host","_ref$siteId","siteId","_paq","u","script","document","async","defer","head","appendChild","string","isRequired","App","initialize","BrowserRouter","basename","component_MatomoTracker","mapDispatchToProps","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","es","Provider","src_App","getElementById","URL","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df045584.chunk.js","sourcesContent":["export const ROUTE_FETCH = \"FETCH_ROUTE\";\nexport const ROUTE_REQUEST = \"REQUEST_ROUTE\";\nexport const ROUTE_RECEIVE = \"RECEIVE_ROUTE\";\nexport const ERROR_RECEIVE = \"RECEIVE_ERROR\";\n\nexport const fetchRoute = (origin, destination) => ({\n  type: ROUTE_FETCH,\n  origin,\n  destination\n});\n\nexport const requestRoute = () => ({\n  type: ROUTE_REQUEST\n});\n\nexport const receiveRoute = route => ({\n  type: ROUTE_RECEIVE,\n  route\n});\n\nexport const receiveError = error => ({\n  type: ERROR_RECEIVE,\n  error\n});\n","import { combineReducers } from \"redux\";\nimport {\n  ROUTE_REQUEST,\n  ROUTE_RECEIVE,\n  ERROR_RECEIVE,\n} from \"../action/route\";\n\nexport const currentRouteReducer = (state = null, action) => {\n  switch (action.type) {\n    case ROUTE_REQUEST:\n      return null;\n    case ROUTE_RECEIVE:\n      return action.route;\n    default:\n      return state;\n  }\n};\n\nexport const isFetchReducer = (state = false, action) => {\n  switch (action.type) {\n    case ROUTE_REQUEST:\n      return true;\n    case ROUTE_RECEIVE:\n    case ERROR_RECEIVE:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport const currentErrorReducer = (state = null, action) => {\n  switch (action.type) {\n    case ROUTE_REQUEST:\n      return null;\n    case ERROR_RECEIVE:\n      return action.error;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  currentError: currentErrorReducer,\n  currentRoute: currentRouteReducer,\n  isFetching: isFetchReducer\n});\n","export const FETCH_GEOLOCATION = \"FETCH_GEOLOCATION\";\nexport const SET_CURRENT_GEOLOCATION = \"SET_CURRENT_GEOLOCATION\";\n\nexport const setCurrentGeolocation = geolocation => ({\n  type: SET_CURRENT_GEOLOCATION,\n  geolocation\n});\n\nexport const fetchCurrentGeolocation = () => ({\n  type: FETCH_GEOLOCATION\n});\n","import { SET_CURRENT_GEOLOCATION } from \"../action/currentGeolocation\";\n\nconst currentGeolocationReducer = (state = null, action) => {\n  switch (action.type) {\n    case SET_CURRENT_GEOLOCATION:\n      return {\n        lat: action.geolocation.lat,\n        lng: action.geolocation.lng\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentGeolocationReducer;\n","import { combineReducers } from \"redux\";\nimport routeReducer from \"./route\";\nimport currentGeolocationReducer from \"./currentGeolocation\";\n\nexport default combineReducers({\n  route: routeReducer,\n  currentGeolocation: currentGeolocationReducer\n});\n","import { create } from \"apisauce\";\n\nexport const api = create({\n  baseURL: process.env.REACT_APP_API_SERVER || process.env.STORY_BOOK_API_SERVER\n});\n","import { api } from \"./baseApi\";\n\nexport const findRoute = (origin, destination) => {\n  origin = formatLocation(origin);\n  destination = formatLocation(destination);\n  return api.get(\"/explore\", { origin, destination });\n};\n\nexport const STATUS_CODE = {\n  OK: \"OK\",\n  UNAVAILABLE: \"UNAVAILABLE\",\n  NOT_FOUND: \"NOT_FOUND\"\n};\n\n/**\n * Convert location parameter to string format that api accept\n *\n * if location is object, convert to `${location.lat},${location.lng}`.\n *\n * if location is string, do nothing.\n *\n * @param {object|string} location\n */\nexport const formatLocation = location => {\n  if (typeof location === \"object\") {\n    return `${location.lat},${location.lng}`;\n  }\n  return location;\n};\n","import { api } from \"./baseApi\";\n\nexport const getGeolocation = () => {\n  return api.get(\"/geolocation\");\n};\n","import { ofType, combineEpics } from \"redux-observable\";\nimport { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { route } from \"../action\";\nimport { explore as exploreApi } from \"../service\";\n\nexport const fetchRouteEpic = action$ =>\n  action$.pipe(\n    ofType(route.ROUTE_FETCH),\n    switchMap(action => {\n      const observable = Observable.create(observer => {\n        observer.next(route.requestRoute());\n        exploreApi.findRoute(action.origin, action.destination).then(res => {\n          if (!res.ok) {\n            observer.next(\n              route.receiveError(exploreApi.STATUS_CODE.UNAVAILABLE)\n            );\n            observer.complete();\n            return;\n          }\n          if (res.data.status !== exploreApi.STATUS_CODE.OK) {\n            observer.next(route.receiveError(res.data.status));\n            observer.complete();\n            return;\n          }\n          if (res.data.route) {\n            observer.next(route.receiveRoute(res.data.route));\n            observer.complete();\n          }\n        });\n      });\n      return observable;\n    })\n  );\n\nexport default combineEpics(fetchRouteEpic);\n","import { ofType, combineEpics } from \"redux-observable\";\nimport { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { currentGeolocation } from \"../action\";\nimport { geolocation as geolocationApi } from \"../service\";\n\nexport const fetchGeolocation = $action =>\n  $action.pipe(\n    ofType(currentGeolocation.FETCH_GEOLOCATION),\n    switchMap(() => {\n      const observable = Observable.create(observer => {\n        geolocationApi.getGeolocation().then(res => {\n          if (!res.ok) {\n            return;\n          }\n          const geolocation = {\n            lat: res.data.lat,\n            lng: res.data.lng\n          };\n          observer.next(currentGeolocation.setCurrentGeolocation(geolocation));\n          observer.complete();\n        });\n      });\n      return observable;\n    })\n  );\n\nexport default combineEpics(fetchGeolocation);\n","import { combineEpics } from \"redux-observable\";\nimport routeEpic from \"./route\";\nimport geolocationEpic from \"./geolocation\";\n\nexport default combineEpics(routeEpic, geolocationEpic);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport rootReducer from \"../reducer\";\nimport rootEpic from \"../epic\";\n\nexport const configureStore = (enhancer = undefined) => {\n  const epicMiddleware = createEpicMiddleware();\n\n  const finalStoreEnhancer = enhancer\n    ? compose(\n        applyMiddleware(epicMiddleware),\n        enhancer\n      )\n    : applyMiddleware(epicMiddleware);\n\n  const store = createStore(rootReducer, finalStoreEnhancer);\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n};\n\nconst store = configureStore();\n\nexport default store;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FluentBundle } from \"fluent/compat\";\nimport { LocalizationProvider } from \"fluent-react/compat\";\nimport { negotiateLanguages as negotiateLanguagesFlt } from \"fluent-langneg/compat\";\nimport enMessages from \"./en\";\nimport zhMessages from \"./zh\";\n\nconst MESSAGES_ALL = {\n  en: enMessages,\n  zh: zhMessages\n};\n\nexport const LOCALES = [\"en\", \"zh\"];\n\nexport const DEFAULT_LOCALE = \"en\";\n\nexport const hasPreferLocales = userLocales => {\n  const matchedLocales = negotiateLanguagesFlt(userLocales, LOCALES);\n  return !_.isEmpty(_.intersection(userLocales, matchedLocales));\n};\n\nexport const negotiateLanguages = userLocales => {\n  return negotiateLanguagesFlt(userLocales, LOCALES, {\n    defaultLocale: DEFAULT_LOCALE\n  });\n};\n\nexport function* generateBundles(userLocales) {\n  const currentLocales = negotiateLanguages(userLocales);\n\n  for (const locale of currentLocales) {\n    const bundle = new FluentBundle(locale);\n    bundle.addMessages(MESSAGES_ALL[locale]);\n    yield bundle;\n  }\n}\n\n/**\n * AppLocalizationProvider\n *\n * Retreive prefer locale from props, then use it to negotiate languages.\n *\n */\nexport class AppLocalizationProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bundles: this._generateBundles()\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.locale !== this.props.locale) {\n      this.setState({\n        bundles: this._generateBundles()\n      });\n    }\n  }\n\n  _generateBundles() {\n    const { locale } = this.props;\n\n    return generateBundles([locale]);\n  }\n\n  render() {\n    const { children } = this.props;\n    const { bundles } = this.state;\n\n    return (\n      <LocalizationProvider bundles={bundles}>{children}</LocalizationProvider>\n    );\n  }\n}\n\nAppLocalizationProvider.propTypes = {\n  locale: PropTypes.string\n};\n\nexport const connectAppLocalizationProvider = locale => {\n  const withLocale = Component => {\n    const WithLocale = props => {\n      return (\n        <AppLocalizationProvider locale={locale}>\n          <Component {...props} />\n        </AppLocalizationProvider>\n      );\n    };\n\n    return WithLocale;\n  };\n\n  return withLocale;\n};\n","export default `\nhello = Hello\nloading = loading...\nstart_explore = start explore\nselect_origin = Select Origin\nplease_select_origin = Please select origin.\nnext = Next\nselect_destination = Select Destination\nplease_select_destination = Please select destination.\ndone = Done\noverview = Overview\nsteps = Steps\nparkings = Parkings\nprint = Print\n`;\n","export default `\nhello = 你好\nloading = 載入中...\nstart_explore = 開始探索\nselect_origin = 出發地\nplease_select_origin = 請選擇出發地\nnext = 下一步\nselect_destination = 目的地\nplease_select_destination = 請選擇目的地\ndone = 完成\noverview = 路線圖\nsteps = 路線詳細資訊\nparkings = 停車場\nprint = 列印\n`;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { negotiateLanguages } from \"../i18n\";\n\nconst RedirectToCurrentLocale = () => {\n  const currentLocale = negotiateLanguages(navigator.languages)[0];\n  return <Redirect to={`/${currentLocale}`} />;\n};\n\nexport default RedirectToCurrentLocale;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  padding: 0.375rem 0.75rem;\n  background-color: transparent;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: 500;\n`;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button } from \"./mixin\";\nimport { withLocalization } from \"fluent-react/compat\";\n\nconst PrintButton = withLocalization(styled(Button).attrs({\n  onClick: () => window.print\n})`\n    background-color: white;\n    display: ${props => (props.show ? \"block\" : \"none\")};\n    \n    &:after {\n        content: '${props => props.getString(\"print\", null, \"Print\")}'\n    }\n`);\n\nPrintButton.defaultProps = {\n  show: true\n};\n\nPrintButton.propTypes = {\n  show: PropTypes.bool\n};\n\nexport default PrintButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Github } from \"styled-icons/fa-brands/Github\";\nimport PrintButton from \"./PrintButton\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: #f8f9fa;\n  padding: 1rem 0.5rem;\n\n  flex-shrink: 0;\n  flex-grow: 0;\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst Brand = styled.h5`\n  padding: 0 0.5rem;\n  margin: 0;\n  font-weight: 600;\n  font-size: 1.25rem;\n`;\n\nconst Nav = styled.ol`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst NavItem = styled.li`\n  padding: 0 0.5rem;\n  color: rgba(0, 0, 0, 0.5);\n`;\n\nconst NavLink = styled.a`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.5);\n\n  &:hover {\n    color: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderPrintButton = this._renderPrintButton.bind(this);\n  }\n\n  _renderPrintButton() {\n    const { displayPrintButton } = this.props;\n\n    if (displayPrintButton) {\n      return (\n        <NavItem>\n          <PrintButton />\n        </NavItem>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Brand>TravelPathExplorer</Brand>\n        <Nav>\n          {this._renderPrintButton()}\n          <NavItem>\n            <NavLink href=\"https:///www.github.com/gy-chen/travel_path_explorer\">\n              <Github size={24} />\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Wrapper>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  displayPrintButton: PropTypes.bool\n};\n\nexport default Navbar;\n","import { connect } from \"react-redux\";\nimport Navbar from \"../component/Navbar\";\n\nconst mapStateToProps = state => ({\n  displayPrintButton: !!state.route.currentRoute\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nconst GoogleMapKeyContext = React.createContext();\n\nexport default GoogleMapKeyContext;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport load from \"load-script\";\nimport GoogleMapKeyContext from \"./GoogleMapKeyContext\";\n\nconst GOOGLE_MAP_API = \"https://maps.googleapis.com/maps/api/js\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n\n  &::before {\n    display: block;\n    content: \"\";\n    padding-top: 56.25%;\n  }\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst SearchBox = styled.input`\n  display: ${props => (props.enableSearchBox ? \"inline-block\" : \"none\")};\n`;\n\nexport class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this._searchBoxRef = React.createRef();\n    this._mapRef = React.createRef();\n    this.searchBox = null;\n    this.map = null;\n    this.google = null;\n    this._initSearchBox = this._initSearchBox.bind(this);\n    this._onSearchBoxPlacesChanged = this._onSearchBoxPlacesChanged.bind(this);\n  }\n\n  componentDidMount() {\n    const { apiKey, onLoaded, ...options } = this.props;\n\n    const initMap = () => {\n      this.map = new window.google.maps.Map(this._mapRef.current, options);\n      this.google = window.google;\n      this._initSearchBox();\n      _.invoke(this.props, \"onLoaded\");\n    };\n\n    if (!window.google) {\n      window.initMap = initMap;\n\n      load(\n        `${GOOGLE_MAP_API}?${\n          apiKey ? `key=${apiKey}` : \"\"\n        }&callback=initMap&libraries=places`\n      );\n    } else {\n      initMap();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { ...options } = this.props;\n    const { ...prevOptions } = prevProps;\n\n    // TODO maybe need to pick up options for google map api only\n    if (this.map && !_.isEqual(options, prevOptions)) {\n      this.map.setOptions(options);\n    }\n  }\n\n  _initSearchBox() {\n    this.searchBox = new this.google.maps.places.SearchBox(\n      this._searchBoxRef.current\n    );\n    this.searchBox.addListener(\n      \"places_changed\",\n      this._onSearchBoxPlacesChanged\n    );\n    this.map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(\n      this._searchBoxRef.current\n    );\n  }\n\n  _onSearchBoxPlacesChanged() {\n    _.invoke(\n      this.props,\n      \"onSearchBoxPlacesChanged\",\n      this.searchBox.getPlaces()\n    );\n  }\n\n  render() {\n    const { enableSearchBox } = this.props;\n\n    return (\n      <Wrapper>\n        <SearchBox\n          type=\"text\"\n          innerRef={this._searchBoxRef}\n          enableSearchBox={enableSearchBox}\n        />\n        <Content innerRef={this._mapRef} />\n      </Wrapper>\n    );\n  }\n}\n\nGoogleMap.propTypes = {\n  apiKey: PropTypes.string,\n  onLoaded: PropTypes.func,\n  enableSearchBox: PropTypes.bool,\n  onSearcBoxPlacesChanged: PropTypes.func\n};\n\nexport const withGoogleMapKeyContext = Component => {\n  const WithGoogleMapKeyContext = React.forwardRef((props, ref) => {\n    return (\n      <GoogleMapKeyContext.Consumer>\n        {key_ => <Component ref={ref} apiKey={key_} {...props} />}\n      </GoogleMapKeyContext.Consumer>\n    );\n  });\n\n  return WithGoogleMapKeyContext;\n};\n\nexport const GoogleMapWithContext = withGoogleMapKeyContext(GoogleMap);\n\nexport default GoogleMapWithContext;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GoogleMap from \"./GoogleMap\";\n\n/**\n * GoogleMapPlacePicker\n *\n * Let user pick a place on the map.\n *\n * Properties of GoogleMap should works.\n *\n * Additional properties:\n *   - onPickPlace(marker): called when user pick a place. Marker is google map Marker type.\n *\n */\nclass GoogleMapPlacePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this._gmap = React.createRef();\n    this._pickedPlaces = [];\n    this._mapLoaded = false;\n\n    this.onMapLoaded = this.onMapLoaded.bind(this);\n  }\n\n  get map() {\n    return this._gmap.current.map;\n  }\n\n  get google() {\n    return this._gmap.current.google;\n  }\n\n  _removeMarkers() {\n    // hide markers\n    _.each(this._pickedPlaces, marker => {\n      marker.setMap(null);\n    });\n  }\n\n  onMapLoaded() {\n    this._mapLoaded = true;\n    if (!this._gmap.current) {\n      return;\n    }\n\n    this.google.maps.event.addListener(this.map, \"click\", event => {\n      const marker = new this.google.maps.Marker({\n        position: event.latLng,\n        map: this.map\n      });\n\n      _.invoke(this.props, \"onPickPlace\", marker);\n\n      this._removeMarkers();\n      this._pickedPlaces.push(marker);\n    });\n  }\n\n  componentDidMount() {\n    if (this._mapLoaded) {\n      this.onMapLoaded();\n    }\n  }\n\n  render() {\n    const { mapOptions } = this.props;\n\n    return (\n      <GoogleMap ref={this._gmap} onLoaded={this.onMapLoaded} {...mapOptions} />\n    );\n  }\n}\n\nGoogleMapPlacePicker.propTypes = {\n  onPickPlace: PropTypes.func,\n  mapOptions: PropTypes.object\n};\n\nexport default GoogleMapPlacePicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GoogleMapPlacePicker from \"./GoogleMapPlacePicker\";\n\nconst Card = styled.div`\n  padding: 1.25rem;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n`;\n\nconst Title = styled.h3`\n  padding: 0;\n  margin: 0;\n  margin-bottom: 0.75rem;\n  font-size: 1.25rem;\n`;\n\nconst Description = styled.p`\n  padding: 0;\n  margin: 0;\n  margin-bottom: 0.6rem;\n  color: #212529;\n`;\n\n/**\n * Provide hint for user to select a palce\n *\n * Display:\n *   - title\n *   - description\n *   - GoogmeMapPlacePicker\n *   - (optional) additional children diplaying in the bottom of the card\n */\nclass PlacePickerCard extends Component {\n  render() {\n    const {\n      title,\n      description,\n      children,\n      onPickPlace,\n      mapOptions\n    } = this.props;\n\n    return (\n      <Card>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n        <GoogleMapPlacePicker\n          onPickPlace={onPickPlace}\n          mapOptions={mapOptions}\n        />\n        {children}\n      </Card>\n    );\n  }\n}\n\nPlacePickerCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  onPickPlace: PropTypes.func,\n  mapOptions: PropTypes.object\n};\n\nexport default PlacePickerCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { STATUS_CODE } from \"../service/explore\";\n\nexport const ERROR_MESSAGE = {\n  [STATUS_CODE.UNAVAILABLE]: \"Server unavailable now. Try again later.\",\n  [STATUS_CODE.NOT_FOUND]: \"No route found. Try different origin or destination\"\n};\n\nconst ErrorMessage = styled.p`\n  margin: 0;\n  color: #dc3545;\n`;\n\n/**\n * Error\n *\n * Display error message according to error code it received.\n *\n */\nconst Error = props => {\n  return <ErrorMessage>{ERROR_MESSAGE[props.errorCode]}</ErrorMessage>;\n};\n\nError.propTypes = {\n  errorCode: PropTypes.string\n};\n\nexport default Error;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Wizard, Steps, Step } from \"react-albus\";\nimport { Localized, withLocalization } from \"fluent-react/compat\";\nimport { Button } from \"./mixin\";\nimport PlacePickerCard from \"./PlacePickerCard\";\nimport Error from \"./Error\";\n\nconst Wrapper = styled.div`\n  margin-top: 1.25rem;\n\n  @media (min-width: 768px) {\n    width: 736px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst StepAdditionalContentWrapper = styled.div`\n  margin-top: 0.6rem;\n`;\n\nconst NextButton = styled(Button)``;\n\nconst DoneButton = styled(Button)``;\n\nconst ErrorWrapper = styled.div`\n  margin-top: 0.6rem;\n`;\n\nconst Loading = styled.p``;\n\n/**\n * DirectionSelectWizard\n *\n * Let user select origin and destination, step by step.\n *\n * Provide properties:\n *   - onDirectionSelected (origin, destination): callback called when user done selected\n *     origin and destination.\n *\n */\nclass DirectionSelectWizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderStepButton = this._renderStepButton.bind(this);\n    this._renderSelectOriginStep = this._renderSelectOriginStep.bind(this);\n    this._renderSelectOriginStepButton = this._renderSelectOriginStepButton.bind(\n      this\n    );\n    this._onPickOrigin = this._onPickOrigin.bind(this);\n    this._renderSelectDestinationStep = this._renderSelectDestinationStep.bind(\n      this\n    );\n    this._renderSelectDestinationStepButton = this._renderSelectDestinationStepButton.bind(\n      this\n    );\n    this._onPickDestination = this._onPickDestination.bind(this);\n    this._onDoneSelection = this._onDoneSelection.bind(this);\n    this._renderError = this._renderError.bind(this);\n\n    this.state = {\n      selectedOrigin: null,\n      selectedDestination: null\n    };\n  }\n\n  _renderSelectOriginStep({ next }) {\n    const { getString, mapOptions } = this.props;\n\n    return (\n      <PlacePickerCard\n        title={getString(\"select_origin\", null, \"Select Origin\")}\n        description={getString(\n          \"please_select_origin\",\n          null,\n          \"Please select origin\"\n        )}\n        onPickPlace={this._onPickOrigin}\n        mapOptions={mapOptions}\n      >\n        {this._renderStepButton(() => this._renderSelectOriginStepButton(next))}\n      </PlacePickerCard>\n    );\n  }\n\n  _renderStepButton(render) {\n    const { isFetching } = this.props;\n\n    if (isFetching) {\n      return (\n        <Localized id=\"loading\">\n          <Loading>loading...</Loading>\n        </Localized>\n      );\n    }\n\n    return render();\n  }\n\n  _renderSelectOriginStepButton(next) {\n    const { selectedOrigin } = this.state;\n\n    const isUserSelectedOrigin = !!selectedOrigin;\n\n    return (\n      <StepAdditionalContentWrapper>\n        <Localized id=\"next\">\n          <NextButton disabled={!isUserSelectedOrigin} onClick={next}>\n            Next\n          </NextButton>\n        </Localized>\n        {this._renderError()}\n      </StepAdditionalContentWrapper>\n    );\n  }\n\n  _onPickOrigin(marker) {\n    this.setState({\n      selectedOrigin: marker\n    });\n  }\n\n  _renderSelectDestinationStep() {\n    const { getString, mapOptions } = this.props;\n\n    return (\n      <PlacePickerCard\n        title={getString(\"select_destination\", null, \"Select Destination\")}\n        description={getString(\n          \"please_select_destination\",\n          null,\n          \"Please select destination.\"\n        )}\n        onPickPlace={this._onPickDestination}\n        mapOptions={mapOptions}\n      >\n        {this._renderStepButton(() =>\n          this._renderSelectDestinationStepButton()\n        )}\n      </PlacePickerCard>\n    );\n  }\n\n  _renderSelectDestinationStepButton() {\n    const isUserSelectedDestination = !!this.state.selectedDestination;\n\n    return (\n      <StepAdditionalContentWrapper>\n        <Localized id=\"done\">\n          <DoneButton\n            disabled={!isUserSelectedDestination}\n            onClick={this._onDoneSelection}\n          >\n            Done\n          </DoneButton>\n        </Localized>\n        {this._renderError()}\n      </StepAdditionalContentWrapper>\n    );\n  }\n\n  _onPickDestination(marker) {\n    this.setState({\n      selectedDestination: marker\n    });\n  }\n\n  _onDoneSelection() {\n    const callbackArgs = _.map(\n      [this.state.selectedOrigin, this.state.selectedDestination],\n      ({ position }) => ({\n        lat: position.lat(),\n        lng: position.lng()\n      })\n    );\n\n    _.invoke(this.props, \"onDirectionSelected\", ...callbackArgs);\n  }\n\n  _renderError() {\n    const { errorCode } = this.props;\n    if (errorCode) {\n      return (\n        <ErrorWrapper>\n          <Error errorCode={errorCode} />\n        </ErrorWrapper>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Wizard>\n          <Steps>\n            <Step id=\"selectOrigin\" render={this._renderSelectOriginStep} />\n            <Step\n              id=\"selectDestination\"\n              render={this._renderSelectDestinationStep}\n            />\n          </Steps>\n        </Wizard>\n      </Wrapper>\n    );\n  }\n}\n\nDirectionSelectWizard.propTypes = {\n  getString: PropTypes.func.isRequired,\n  onDirectionSelected: PropTypes.func,\n  isFetching: PropTypes.bool,\n  errorCode: PropTypes.string,\n  mapOptions: PropTypes.object\n};\n\nexport default withLocalization(DirectionSelectWizard);\n","import React from \"react\";\n\nconst GoogleStaticMapKeyContext = React.createContext();\n\nexport default GoogleStaticMapKeyContext;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport qs from \"qs\";\nimport GoogleStaticMapKeyContext from \"./GoogleStaticMapKeyContext\";\n\nconst GOOGLE_STATIC_MAP_API = \"https://maps.googleapis.com/maps/api/staticmap?\";\n\nconst Image = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\n\n// TODO support mark style\nconst toMarkersQueryString = markers => {\n  const markersQueryString = _.chain(markers)\n    .map(marker => `${marker.lat},${marker.lng}`)\n    .join(\"|\");\n  return `|${markersQueryString}`;\n};\n\nconst GoogleStaticMap = props => {\n  const { size, zoom, center, path, key_, markers } = props;\n\n  const params = { size, zoom, key: key_ };\n\n  if (path) {\n    params[\"path\"] = `enc:${path}`;\n  }\n  if (center) {\n    params[\"center\"] = `${center[\"lat\"]},${center[\"lng\"]}`;\n  }\n  if (markers) {\n    params[\"markers\"] = toMarkersQueryString(markers);\n  }\n\n  const src = GOOGLE_STATIC_MAP_API + qs.stringify(params);\n\n  return <Image src={src} />;\n};\n\nGoogleStaticMap.propTypes = {\n  size: PropTypes.string,\n  path: PropTypes.string,\n  center: PropTypes.shape({\n    lat: PropTypes.number,\n    lng: PropTypes.number\n  }),\n  zoom: PropTypes.number,\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      position: PropTypes.shape({\n        lat: PropTypes.number,\n        lng: PropTypes.number\n      })\n    })\n  ),\n  key_: PropTypes.string.isRequired\n};\n\nGoogleStaticMap.defaultProps = {\n  size: \"320x300\"\n};\n\nconst withGoogleStaticMapKey = Component => {\n  const WithGoogleStaticMapKey = props => {\n    return (\n      <GoogleStaticMapKeyContext.Consumer>\n        {key_ => <Component key_={key_} {...props} />}\n      </GoogleStaticMapKeyContext.Consumer>\n    );\n  };\n\n  return WithGoogleStaticMapKey;\n};\n\nexport default withGoogleStaticMapKey(GoogleStaticMap);\n","import styled from 'styled-components';\n\nconst Image = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\n\nexport default Image;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GoogleStaticMap from \"./GoogleStaticMap\";\nimport Image from './Image';\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  margin-left: 8px;\n  margin-right: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst Column = styled.div`\n  flex: 0 0 33%;\n  padding-left: 15px;\n  padding-right: 15px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Instruction = styled.p``;\n\nconst Distance = styled.p``;\n\n/**\n * Step\n *\n * Display:\n *   - instruction\n *   - distance\n *   - streetview image\n *   - overview\n */\nconst Step = props => {\n  const {\n    html_instructions,\n    distance,\n    location,\n    image,\n    overview_polyline\n  } = props;\n\n  return (\n    <Wrapper>\n      <Column>\n        <Instruction dangerouslySetInnerHTML={{ __html: html_instructions }} />\n        <Distance>{distance}</Distance>\n      </Column>\n      <Column>\n        <GoogleStaticMap\n          center={location}\n          path={overview_polyline}\n          markers={[location]}\n          zoom={17}\n        />\n      </Column>\n      <Column>\n        <Image src={image} />\n      </Column>\n    </Wrapper>\n  );\n};\n\nStep.propTypes = {\n  html_instructions: PropTypes.string,\n  distance: PropTypes.string,\n  location: PropTypes.shape({\n    lat: PropTypes.number,\n    lng: PropTypes.number\n  }),\n  overview_polyline: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default Step;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport GoogleStaticMap from \"./GoogleStaticMap\";\nimport Image from './Image';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  margin-left: 8px;\n  margin-right: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst Column = styled.div`\n  flex: 0 0 33%;\n  box-sizing: border-box;\n  margin-left: 4px;\n  margin-right: 4px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\n/**\n * Parking\n *\n * display parking information:\n *   - location on the map\n *   - streetview image\n */\nconst Parking = props => {\n  const { location, image } = props;\n\n  return (\n    <Wrapper>\n      <Column>\n        <GoogleStaticMap center={location} markers={[location]} zoom={16} />\n      </Column>\n      <Column>\n        <Image src={image} />\n      </Column>\n    </Wrapper>\n  );\n};\n\nParking.propTypes = {\n  location: PropTypes.shape({\n    lat: PropTypes.number,\n    lnt: PropTypes.number\n  }),\n  image: PropTypes.string\n};\n\nexport default Parking;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Localized } from \"fluent-react/compat\";\n\nimport GoogleStaticMap from \"./GoogleStaticMap\";\nimport Step from \"./Step\";\nimport Parking from \"./Parking\";\n\nconst Wrapper = styled.div`\n  @media screen {\n    display: flex;\n    justify-content: center;\n    background-color: #e0e0e0;\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  width: 210mm;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  padding: 12px;\n\n  @media screen {\n    box-shadow: 0 0.5mm 2mm rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst Title = styled.h2`\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\n/**\n * Generate travel path explore report\n *\n * Display info:\n *   - overview\n *   - steps\n *   - parkings\n */\nconst Report = props => {\n  const { overview, steps, parkings } = props;\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Localized id=\"overview\">\n          <Title>Overview</Title>\n        </Localized>\n        <GoogleStaticMap path={overview.polyline.points} />\n        <Localized id=\"steps\">\n          <Title>Steps</Title>\n        </Localized>\n        {steps.map((step, index) => (\n          <Step\n            key={index}\n            overview_polyline={overview.polyline.points}\n            {...step}\n          />\n        ))}\n        <Localized id=\"parkings\">\n          <Title>Parkings</Title>\n        </Localized>\n        {parkings.map((parking, index) => (\n          <Parking key={index} {...parking} />\n        ))}\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nReport.propTypes = {\n  overview: PropTypes.shape({\n    polyline: PropTypes.shape({\n      points: PropTypes.string\n    })\n  }),\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      html_instructions: PropTypes.string,\n      distance: PropTypes.string,\n      location: PropTypes.shape({\n        lat: PropTypes.number,\n        lng: PropTypes.number\n      }),\n      image: PropTypes.string\n    })\n  ),\n  parking: PropTypes.arrayOf(\n    PropTypes.shape({\n      location: PropTypes.shape({\n        lat: PropTypes.number,\n        lng: PropTypes.number\n      }),\n      image: PropTypes.string\n    })\n  )\n};\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport DirectionSelectWizard from \"./DirectionSelectWizard\";\nimport Report from \"./Report\";\n\nconst Wrapper = styled.div``;\n\n/**\n * Explore\n *\n * Provide explore function:\n *   1. let user choose origin and destination\n *   2. display route from origin to destination\n */\nclass Explore extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderCurrentRoute = this._renderCurrentRoute.bind(this);\n    this._renderDirectionSelectWizard = this._renderDirectionSelectWizard.bind(\n      this\n    );\n  }\n\n  _renderCurrentRoute() {\n    const { currentRoute } = this.props;\n\n    if (currentRoute) {\n      return <Report {...currentRoute} />;\n    }\n    return null;\n  }\n\n  _renderDirectionSelectWizard() {\n    const {\n      currentRoute,\n      currentGeolocation,\n      isFetching,\n      onDirectionSelected,\n      onSearchBoxPlacesChanged,\n      currentError\n    } = this.props;\n    if (!currentRoute) {\n      const mapOptions = {\n        enableSearchBox: true,\n        onSearchBoxPlacesChanged: onSearchBoxPlacesChanged,\n        zoom: 12,\n        center: currentGeolocation\n      };\n\n      return (\n        <DirectionSelectWizard\n          isFetching={isFetching}\n          onDirectionSelected={onDirectionSelected}\n          errorCode={currentError}\n          mapOptions={mapOptions}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        {this._renderCurrentRoute()}\n        {this._renderDirectionSelectWizard()}\n      </Wrapper>\n    );\n  }\n}\n\nExplore.propTypes = {\n  isFetching: PropTypes.bool,\n  currentRoute: PropTypes.shape({\n    overview: PropTypes.shape({\n      polyline: PropTypes.shape({\n        points: PropTypes.string\n      })\n    }),\n    steps: PropTypes.arrayOf(\n      PropTypes.shape({\n        html_instructions: PropTypes.string,\n        distance: PropTypes.string,\n        location: PropTypes.shape({\n          lat: PropTypes.number,\n          lng: PropTypes.number\n        }),\n        image: PropTypes.string\n      })\n    ),\n    parking: PropTypes.arrayOf(\n      PropTypes.shape({\n        location: PropTypes.shape({\n          lat: PropTypes.number,\n          lng: PropTypes.number\n        }),\n        image: PropTypes.string\n      })\n    )\n  }),\n  currentGeolocation: PropTypes.shape({\n    lat: PropTypes.number,\n    lng: PropTypes.numbers\n  }),\n  currentError: PropTypes.string,\n  onDirectionSelected: PropTypes.func,\n  onSearchBoxPlacesChanged: PropTypes.func\n};\n\nExplore.defaultProps = {\n  isFetching: false\n};\n\nexport default Explore;\n","import { connect } from \"react-redux\";\nimport Explore from \"../component/Explore\";\nimport { route, currentGeolocation } from \"../action\";\n\nconst mapStateToProps = state => ({\n  currentError: state.route.currentError,\n  currentRoute: state.route.currentRoute,\n  currentGeolocation: state.currentGeolocation,\n  isFetching: state.route.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDirectionSelected: (origin, destination) =>\n    dispatch(route.fetchRoute(origin, destination)),\n  onSearchBoxPlacesChanged: places => {\n    if (!places) {\n      return;\n    }\n    const place = places[0];\n    const newGeolocation = {\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    };\n    dispatch(currentGeolocation.setCurrentGeolocation(newGeolocation));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Explore);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Localized } from \"fluent-react/compat\";\n\nconst Wrapper = styled.div`\n  height: calc(100vh - 58px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div``;\n\n/**\n * Intro page\n */\nconst Intro = props => {\n  const { match } = props;\n\n  return (\n    <Wrapper>\n      <Content>\n        <h1>Intro</h1>\n        <Localized id=\"start_explore\">\n          <Link to={`${match.url}/explore`}>start explore</Link>\n        </Localized>\n      </Content>\n    </Wrapper>\n  );\n};\n\nIntro.propTypes = {\n  match: PropTypes.object\n};\n\nexport default withRouter(Intro);\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./container/Navbar\";\nimport Explore from \"./container/Explore\";\nimport Intro from \"./component/Intro\";\nimport RedirectToCurrentLocale from \"./component/RedirectToCurrentLocale\";\nimport { hasPreferLocales, AppLocalizationProvider } from \"./i18n\";\n\nclass AppRoutes extends Component {\n  // [[name, Component], ...]\n  // name will be used to construct route, final route url will become /<locale>/<name>\n  static URLS = [[\"explore\", Explore], [\"\", Intro]];\n\n  constructor(props) {\n    super(props);\n\n    this._renderAppRoutes = this._renderAppRoutes.bind(this);\n    this._hasPreferLocales = this._hasPreferLocales.bind(this);\n\n    this.state = {\n      hasPreferLocales: this._hasPreferLocales()\n    };\n  }\n\n  _hasPreferLocales() {\n    const {\n      match: {\n        params: { locale }\n      }\n    } = this.props;\n    return hasPreferLocales([locale]);\n  }\n\n  _renderAppRoutes() {\n    const { match } = this.props;\n\n    const routes = [];\n    for (const [name, Component] of AppRoutes.URLS) {\n      const path = `${match.url}/${name}`;\n      routes.push(<Route key={path} exact path={path} component={Component} />);\n    }\n    return routes;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.locale !== this.props.match.params.locale) {\n      this.setState({\n        hasPreferLocales: this._hasPreferLocales()\n      });\n    }\n  }\n\n  render() {\n    const { hasPreferLocales } = this.state;\n    if (!hasPreferLocales) {\n      return <RedirectToCurrentLocale />;\n    }\n\n    const {\n      match: {\n        params: { locale }\n      }\n    } = this.props;\n\n    return (\n      <AppLocalizationProvider locale={locale}>\n        <div>\n          <Navbar />\n          <Switch>\n            {this._renderAppRoutes()}\n            <Route path=\"/\" component={RedirectToCurrentLocale} />\n          </Switch>\n        </div>\n      </AppLocalizationProvider>\n    );\n  }\n}\n\nexport default AppRoutes;\n","import PropTypes from \"prop-types\";\n\nconst MatomoTracker = ({ host, siteId = \"1\" }) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    return null;\n  }\n\n  if (window._paq !== undefined) {\n    return null;\n  }\n\n  const u = `//${host}/`;\n  const _paq = [];\n  _paq.push([\"trackPageView\"]);\n  _paq.push([\"enableLinkTracking\"]);\n  _paq.push([\"setTrackerUrl\", `${u}piwik.php`]);\n  _paq.push([\"setSiteId\", siteId]);\n  window._paq = _paq;\n\n  const script = document.createElement(\"script\");\n  script.src = `${u}piwik.js`;\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.defer = true;\n\n  document.head.appendChild(script);\n  return null;\n};\n\nMatomoTracker.propTypes = {\n  host: PropTypes.string.isRequired,\n  siteId: PropTypes.string\n};\n\nexport default MatomoTracker;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport RedirectToCurrentLocale from \"./component/RedirectToCurrentLocale\";\nimport AppRoutes from \"./AppRoutes\";\nimport { currentGeolocation } from \"./action\";\nimport MatomoTracker from \"./component/MatomoTracker\";\n\n/**\n * App\n *\n * Handle routing, display correct information according to routing.\n *\n */\nclass App extends Component {\n  componentDidMount() {\n    const { initialize } = this.props;\n\n    initialize();\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n        <div>\n          <Switch>\n            <Route path=\"/:locale\" component={AppRoutes} />\n            <Route path=\"/\" component={RedirectToCurrentLocale} />\n          </Switch>\n          <MatomoTracker host={process.env.REACT_APP_TRACKER_SERVER} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  initialize: currentGeolocation.fetchCurrentGeolocation\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport GoogleMapKeyContext from \"./component/GoogleMapKeyContext\";\nimport GoogleStaticMapKeyContext from \"./component/GoogleStaticMapKeyContext\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <GoogleStaticMapKeyContext.Provider\n      value={process.env.REACT_APP_GMAPS_API_KEY}\n    >\n      <GoogleMapKeyContext.Provider value={process.env.REACT_APP_GMAPS_API_KEY}>\n        <App />\n      </GoogleMapKeyContext.Provider>\n    </GoogleStaticMapKeyContext.Provider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}